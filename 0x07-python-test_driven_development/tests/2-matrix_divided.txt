>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(matrix, "")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 26, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 10)
[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
>>> matrix_divided(matrix, 10.5)
[[0.1, 0.19, 0.29], [0.38, 0.48, 0.57]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix[0][1] = "Test"
>>> matrix_divided(matrix, 10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 40, in matrix_divided
    raise TypeError(msg)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix[0][1] = 2.5
>>> matrix_divided(matrix, 10)
[[0.1, 0.25, 0.3], [0.4, 0.5, 0.6]]
>>> matrix = ""
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
