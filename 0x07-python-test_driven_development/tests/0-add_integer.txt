>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 3)
4
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> try:
...     print(add_integer(4, "School"))
... except Exception as e:
...     print(e)
... 
b must be an integer
>>> try:
...     print(add_integer(None))
... except Exception as e:
...     print(e)
... 
a must be an integer
>>> add_integer(-1, -6)
-7
>>> add_integer("", [])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(2.9, 0.2)
2
>>> add_integer(-2.9, -0.2)
-2
>>> add_integer(-100, 2)
-98
>>> add_integer(1, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
