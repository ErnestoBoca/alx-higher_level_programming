>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> 
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 11, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> bg.integer_validator("")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator(4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("", 4)
>>> bg.integer_validator("", "")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 16, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError:  must be an integer
>>> bg.integer_validator("", -4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 18, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError:  must be greater than 0
>>> bg.integer_validator("", -4, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("", 2.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 16, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError:  must be an integer
>>> bg.integer_validator("", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 18, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError:  must be greater than 0
>>> bg.integer_validator("", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 16, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError:  must be an integer
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg = BaseGeometry()
>>> bg.area(5, 5)
Traceback (most recent call last):
..
TypeError: area() takes 1 positional argument but 3 were given

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
